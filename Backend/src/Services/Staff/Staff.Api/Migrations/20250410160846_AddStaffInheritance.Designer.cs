// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Staffs.Api.Infrastructure.Database;

#nullable disable

namespace Staffs.Api.Migrations
{
    [DbContext(typeof(StaffDbContext))]
    [Migration("20250410160846_AddStaffInheritance")]
    partial class AddStaffInheritance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("staff")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Shifts", "staff");
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Staff", "staff");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Doctor", b =>
                {
                    b.HasBaseType("Staffs.Api.Domain.Entities.Staff");

                    b.Property<string>("ConsultationRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Doctors", "staff");
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Nurse", b =>
                {
                    b.HasBaseType("Staffs.Api.Domain.Entities.Staff");

                    b.Property<string>("CertificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftPreference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Nurses", "staff");
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Shift", b =>
                {
                    b.HasOne("Staffs.Api.Domain.Entities.Staff", "Staff")
                        .WithMany("Shifts")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Staffs.Api.Domain.Entities.Staff", null)
                        .WithOne()
                        .HasForeignKey("Staffs.Api.Domain.Entities.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Nurse", b =>
                {
                    b.HasOne("Staffs.Api.Domain.Entities.Staff", null)
                        .WithOne()
                        .HasForeignKey("Staffs.Api.Domain.Entities.Nurse", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Staffs.Api.Domain.Entities.Staff", b =>
                {
                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
